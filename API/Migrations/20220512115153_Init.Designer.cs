// <auto-generated />
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220512115153_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API.Models.Interest", b =>
                {
                    b.Property<int>("InterestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InterestID");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestID = 1,
                            Description = "Our future.",
                            Title = "Tesla"
                        },
                        new
                        {
                            InterestID = 2,
                            Description = "Am big rocket.",
                            Title = "SpaceX"
                        },
                        new
                        {
                            InterestID = 3,
                            Description = "[INSERT-DESCRIPTION-HERE]",
                            Title = "[INSERT-TITLE-HERE]"
                        });
                });

            modelBuilder.Entity("API.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            Address = "Vintergatan 999",
                            Email = "simon.johansson@mail.com",
                            Name = "Simon",
                            PhoneNumber = "123 456 78 90",
                            Surname = "Johansson"
                        },
                        new
                        {
                            PersonID = 2,
                            Address = "Marsgatan 999",
                            Email = "elon.musk@mail.com",
                            Name = "Elon",
                            PhoneNumber = "123 456 78 91",
                            Surname = "Musk"
                        },
                        new
                        {
                            PersonID = 3,
                            Address = "Umeå 999",
                            Email = "rebecca.gerdin@mail.com",
                            Name = "Rebecca",
                            PhoneNumber = "123 456 78 92",
                            Surname = "Gerdin"
                        });
                });

            modelBuilder.Entity("API.Models.Website", b =>
                {
                    b.Property<int>("WebsiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsiteID"), 1L, 1);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WebsiteID");

                    b.ToTable("Websites");

                    b.HasData(
                        new
                        {
                            WebsiteID = 1,
                            Link = "https://www.tesla.com/",
                            Title = "Tesla"
                        },
                        new
                        {
                            WebsiteID = 2,
                            Link = "https://www.spacex.com/",
                            Title = "SpaceX"
                        },
                        new
                        {
                            WebsiteID = 3,
                            Link = "https://youtu.be/dQw4w9WgXcQ",
                            Title = "FREE TESLA"
                        });
                });

            modelBuilder.Entity("InterestWebsite", b =>
                {
                    b.Property<int>("InterestID")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteID")
                        .HasColumnType("int");

                    b.HasKey("InterestID", "WebsiteID");

                    b.HasIndex("WebsiteID");

                    b.ToTable("InterestWebsite");

                    b.HasData(
                        new
                        {
                            InterestID = 1,
                            WebsiteID = 1
                        },
                        new
                        {
                            InterestID = 2,
                            WebsiteID = 2
                        },
                        new
                        {
                            InterestID = 3,
                            WebsiteID = 3
                        });
                });

            modelBuilder.Entity("PersonInterest", b =>
                {
                    b.Property<int>("InterestID")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("InterestID", "PersonID");

                    b.HasIndex("PersonID");

                    b.ToTable("PersonInterest");

                    b.HasData(
                        new
                        {
                            InterestID = 1,
                            PersonID = 1
                        },
                        new
                        {
                            InterestID = 1,
                            PersonID = 2
                        },
                        new
                        {
                            InterestID = 2,
                            PersonID = 1
                        },
                        new
                        {
                            InterestID = 2,
                            PersonID = 2
                        },
                        new
                        {
                            InterestID = 3,
                            PersonID = 3
                        });
                });

            modelBuilder.Entity("PersonWebsite", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteID")
                        .HasColumnType("int");

                    b.HasKey("PersonID", "WebsiteID");

                    b.HasIndex("WebsiteID");

                    b.ToTable("PersonWebsite");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            WebsiteID = 1
                        },
                        new
                        {
                            PersonID = 2,
                            WebsiteID = 1
                        },
                        new
                        {
                            PersonID = 1,
                            WebsiteID = 2
                        },
                        new
                        {
                            PersonID = 2,
                            WebsiteID = 2
                        },
                        new
                        {
                            PersonID = 3,
                            WebsiteID = 3
                        });
                });

            modelBuilder.Entity("InterestWebsite", b =>
                {
                    b.HasOne("API.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Website", null)
                        .WithMany()
                        .HasForeignKey("WebsiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonInterest", b =>
                {
                    b.HasOne("API.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonWebsite", b =>
                {
                    b.HasOne("API.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Website", null)
                        .WithMany()
                        .HasForeignKey("WebsiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
